// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/zsoltggs/tabeo-interview/services/bookings/internal/service (interfaces: Service)
//
// Generated by this command:
//
//	mockgen -package=mocks -destination=../mocks/service.go github.com/zsoltggs/tabeo-interview/services/bookings/internal/service Service
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/zsoltggs/tabeo-interview/services/bookings/internal/models"
	gomock "go.uber.org/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// CreateBooking mocks base method.
func (m *MockService) CreateBooking(arg0 context.Context, arg1 models.CreateBooking) (*models.Booking, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBooking", arg0, arg1)
	ret0, _ := ret[0].(*models.Booking)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateBooking indicates an expected call of CreateBooking.
func (mr *MockServiceMockRecorder) CreateBooking(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBooking", reflect.TypeOf((*MockService)(nil).CreateBooking), arg0, arg1)
}

// DeleteBooking mocks base method.
func (m *MockService) DeleteBooking(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteBooking", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteBooking indicates an expected call of DeleteBooking.
func (mr *MockServiceMockRecorder) DeleteBooking(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBooking", reflect.TypeOf((*MockService)(nil).DeleteBooking), arg0, arg1)
}

// ListBookings mocks base method.
func (m *MockService) ListBookings(arg0 context.Context, arg1 models.Filters, arg2 models.Pagination) ([]models.Booking, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListBookings", arg0, arg1, arg2)
	ret0, _ := ret[0].([]models.Booking)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListBookings indicates an expected call of ListBookings.
func (mr *MockServiceMockRecorder) ListBookings(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListBookings", reflect.TypeOf((*MockService)(nil).ListBookings), arg0, arg1, arg2)
}
